import './App.css';
import { useState } from 'react';

function App() {
  // St캐voklis, lai izsekotu pa코reiz캡jo ievades lauka v캡rt캶bu
  const [ievade, setIevade] = useState('');
  
  // St캐voklis, lai saglab캐tu visu uzdevumu mas캶vu
  const [uzdevumi, setUzdevumi] = useState([]);

  //Pievieno uzdevumu zem ievades loga
  function pievienotUzdevumu() {
    // Pievieno uzdevumu tikai ja ievade nav tuk코a vai tikai atstarpes
    if (ievade.trim() !== '') {
      // Pievieno jaunu uzdevumu mas캶vam izmantojot spread operatoru, lai saglab캐tu nemain캶gumu
      setUzdevumi([...uzdevumi, ievade]);
      // Izt캶ra ievades lauku p캡c pievieno코anas
      setIevade('');
    }
  }

  // P캐rvieto uzdevumu augst캐k
  function augstak(idx) {
    // Ne컆auj p캐rvietot uzdevumu augst캐k, ja uzdevumus jau ir pa코캐 aug코캐
    if (idx === 0) return;
    // Izveido uzdevumu mas캶va kopiju
    const jaunsUzdevums = [...uzdevumi];
    // Apmaina pa코reiz캡jo uzdevumu ar to, kas ir virs t캐, izmantojot array destructuring
    [jaunsUzdevums[idx - 1], jaunsUzdevums[idx]] = [jaunsUzdevums[idx], jaunsUzdevums[idx - 1]];
    // Atjaunina st캐vokli ar p캐rk캐rtoto mas캶vu
    setUzdevumi(jaunsUzdevums);
  }
  
  //P캐rvieto uzdevumu zem캐k
  function zemak(idx) {
    // Ne컆auj p캐rvietot uzdevumu zem캐k, ja uzdevumus jau ir pa코캐 apak코캐
    if (idx === uzdevumi.length - 1) return;
    const jaunsUzdevums = [...uzdevumi];
    // Apmaina pa코reiz캡jo uzdevumu ar to, kas ir zem t캐
    [jaunsUzdevums[idx], jaunsUzdevums[idx + 1]] = [jaunsUzdevums[idx + 1], jaunsUzdevums[idx]];
    setUzdevumi(jaunsUzdevums);
  }
  
  // Render캡 HTML elementus lap캐
  return (
    <>
    <h1>Pl캐not캐js izmantojot React.jsx</h1> 
    <div>
      <input
       type="text" 
       required placeholder='Ieavadi uzdevumu...' 
       value={ievade}
       // Atjaunina st캐vokli pie katras ievades izmai켽as
       onChange={e => setIevade(e.target.value)}></input>
      <button className='pievienot-btn' onClick={pievienotUzdevumu}>Pievienot</button> 
    </div>
    <div>
      <ul>
        {/* Iziet cauri uzdevumu mas캶vam, lai render캡tu katru uzdevumu k캐 saraksta elementu */}
        {uzdevumi.map((uzd, idx) => (
          <li key={idx}>
            <span>{uzd}</span>
          <span className='button-group'>
            <button className='move-btn'
            onClick={() => augstak(idx)}
            // Atsp캡jo pogu, ja uzdevums jau ir aug코캐
            disabled={idx === 0}
            style={{ marginLeft: '5px' }}
            >
              游녡
            </button>
            <button
            className='move-btn'
            onClick={() => zemak(idx)}
            // Atsp캡jo pogu, ja uzdevums jau ir apak코캐
            disabled={idx === uzdevumi.length - 1}
            style={{ marginLeft: '5px' }}
            >
              游녢
            </button>
          </span>
          </li>
        ))}
      </ul>
    </div>
    </>
  )
}

export default App